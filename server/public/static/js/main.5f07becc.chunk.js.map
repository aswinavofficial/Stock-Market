{"version":3,"sources":["Charts.js","Stocks.js","StockHistory.js","TopStocks.js","Router.js","NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["ReactChartkick","addAdapter","Chart","ChartComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDayChange1","bind","assertThisInitialized","handleDayChange2","handleChange","handleSubmit","state","error","isLoaded","items","undefined","selectedDay1","selectedDay2","company","event","setState","target","value","_this2","preventDefault","query","fetch","then","res","json","result","console","log","_this3","_this$state","react_default","a","createElement","message","className","Breadcrumb","BreadcrumbItem","href","active","Container","Row","Col","sm","Form","inline","onSubmit","FormGroup","Label","for","Input","type","name","id","onChange","placeholder","Button","react_chartkick_esm","data","Component","StockComponent","date","md","size","offset","es","columns","Header","accessor","defaultPageSize","React","StockHistoryComponent","TopStockComponent","defaultSorted","desc","Router","Switch","Route","exact","path","component","NavigationBar","toggle","isOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","App","document","title","NavigationBar_NavigationBar","src_Router","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f07becc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import 'react-day-picker/lib/style.css';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n\n\n\nimport ReactChartkick, { LineChart } from 'react-chartkick'\nimport Chart from 'chart.js'\n\nReactChartkick.addAdapter(Chart)\n\n\nclass ChartComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleDayChange1 = this.handleDayChange1.bind(this);\n    this.handleDayChange2 = this.handleDayChange2.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items :undefined,\n      selectedDay1: undefined,\n      selectedDay2: undefined,\n      company : undefined\n    };\n  }\n\n  handleChange(event) {\n    this.setState({company: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var query =\"?day1=\"+this.state.selectedDay1+\"&day2=\"+this.state.selectedDay2;\n    fetch(\"api/chart/\"+this.state.company+query)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  handleDayChange1(event) {\n    this.setState({ selectedDay1: event.target.value });\n  }\n\n  handleDayChange2(event) {\n    this.setState({ selectedDay2: event.target.value });\n  }\n\n  componentDidMount() {\n    fetch(\"api/chart/ACN?day1=2016-12-01&day2=2016-12-30\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(\"Items\"+typeof this.state.items)\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n\n\n\n\n  render() {\n    \n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    }\n    else\n    {\n    return (\n      <div className=\"App\">\n\n<Breadcrumb>\n        <BreadcrumbItem><a href=\"/\">Home</a></BreadcrumbItem>\n        <BreadcrumbItem active>Analytics</BreadcrumbItem>\n      </Breadcrumb>\n    <Container>\n    <Row>\n          <Col sm=\"12\">\n          <Form inline onSubmit={this.handleSubmit}>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"company\" className=\"mr-sm-2\">Company Symbol:</Label>\n          <Input type=\"text\" name=\"company\" id=\"company\" value={this.state.value} onChange={this.handleChange} placeholder=\"PCLN\" />\n        </FormGroup>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"from\" className=\"mr-sm-2\">From:</Label>\n          <Input type=\"text\" name=\"from\" id=\"from\"  onChange={this.handleDayChange1} placeholder=\"2016-12-22\" />\n        </FormGroup>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"to\" className=\"mr-sm-2\">To:</Label>\n          <Input type=\"text\" name=\"to\" id=\"to\" onChange={this.handleDayChange2} placeholder=\"2016-12-30\" />\n        </FormGroup>\n        <Button>Submit</Button>\n</Form>\n          \n          \n          </Col>\n    </Row>\n    </Container>\n   <br/> \n\n       {/* <form onSubmit={this.handleSubmit}>\n       \n        Company: \n        <input type=\"text\" value={this.state.value} onChange={this.handleChange} /> <br/>\n       From : <input type=\"text\" onChange={this.handleDayChange1} /> <br/>\n       To : <input type=\"text\"  onChange={this.handleDayChange2} /> <br/>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form> */}\n         \n         {/* {selectedDay1 && <p> {selectedDay1.toLocaleDateString()}</p>}\n        {!selectedDay1 && <p>From :</p>}\n        <DayPickerInput onDayChange={this.handleDayChange1} /> */}\n\n\n        {/* {selectedDay2 && <p> {selectedDay2.toLocaleDateString()}</p>}\n        {!selectedDay2 && <p>To : </p>}\n        <DayPickerInput  onDayChange={this.handleDayChange2} /> */}\n      \n      \n          <LineChart data={items} />\n      </div>\n    );\n  }\n  }\n}\n\nexport default ChartComponent;","import React from \"react\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass StockComponent extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      data: [],\n      date : '2016-09-12'\n    };\n  }\n\n  handleChange(event) {\n    this.setState({date: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"api/stock/\"+this.state.date)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          data: result\n        });\n        console.log(result)\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n\n  componentDidMount() {\n    fetch(\"api/stock/\"+this.state.date)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            data: result\n          });\n          console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n\n<Breadcrumb>\n        <BreadcrumbItem><a href=\"/\">Home</a></BreadcrumbItem>\n        <BreadcrumbItem active>Stock on a Date</BreadcrumbItem>\n      </Breadcrumb>\n    <Container>\n    <Row>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form inline onSubmit={this.handleSubmit}>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"date\" className=\"mr-sm-2\">Date</Label>\n          <Input type=\"text\" name=\"date\" id=\"date\" value={this.state.value} onChange={this.handleChange} placeholder=\"2016-09-12\" />\n        </FormGroup>\n        <Button>Submit</Button>\n</Form>\n          \n          \n          </Col>\n    </Row>\n    </Container>\n   <br/> \n\n{/* <form onSubmit={this.handleSubmit}>\n       \n       Date : \n       <input type=\"text\" value={this.state.value} onChange={this.handleChange} /> <br/>\n\n       <input type=\"submit\" value=\"Submit\" />\n     </form> */}\n\n        <ReactTable\n          data={data}\n          columns={[\n            {\n              Header: \"Symbol\",\n              accessor: 'symbol'\n            },\n            {\n              Header: \"Open\",\n              accessor: 'open'\n            },\n            {\n              Header: 'Close',\n              accessor: 'close'\n            },\n            {\n                Header: 'Low',\n                accessor: 'low'\n            },\n            {\n                Header: 'High',\n                accessor: 'high'\n            },\n            {\n                Header: 'Volume',\n                accessor: 'volume'\n            }\n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n\n\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default StockComponent;\n\n\n","import React from \"react\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n\n\n\nclass StockHistoryComponent extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      data: [],\n      company : 'ACN'\n    };\n  }\n\n  handleChange(event) {\n    this.setState({company: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"api/\"+this.state.company)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          data: result\n        });\n        console.log(result)\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n\n  componentDidMount() {\n    fetch(\"api/\"+this.state.company)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            data: result\n          });\n          console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n          <Breadcrumb>\n        <BreadcrumbItem><a href=\"/\">Home</a></BreadcrumbItem>\n        <BreadcrumbItem active>Stock History</BreadcrumbItem>\n      </Breadcrumb>\n    <Container>\n    <Row>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form inline onSubmit={this.handleSubmit}>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"company\" className=\"mr-sm-2\">Company Symbol</Label>\n          <Input type=\"text\" name=\"email\" id=\"company\" value={this.state.value} onChange={this.handleChange} placeholder=\"PCLN\" />\n        </FormGroup>\n        <Button>Submit</Button>\n</Form>\n          \n          \n          </Col>\n    </Row>\n    </Container>\n   <br/> \n\n\n\n\n{/* <form onSubmit={this.handleSubmit}>\n       \n       Company Symbol : \n       <input type=\"text\" value={this.state.value} onChange={this.handleChange} /> <br/>\n\n       <input type=\"submit\" value=\"Submit\" />\n     </form> */}\n\n        <ReactTable\n          data={data}\n          columns={[\n            {\n              Header: \"Date\",\n              accessor: 'date'\n            },\n            {\n              Header: \"Open\",\n              accessor: 'open'\n            },\n            {\n              Header: 'Close',\n              accessor: 'close'\n            },\n            {\n                Header: 'Low',\n                accessor: 'low'\n            },\n            {\n                Header: 'High',\n                accessor: 'high'\n            },\n            {\n                Header: 'Volume',\n                accessor: 'volume'\n            }\n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n\n\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default StockHistoryComponent;\n\n\n","import React from \"react\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TopStockComponent extends React.Component {\n  \n    constructor() {\n        super();\n        this.state = {\n          data: [],\n          isLoaded: false,\n        };\n      }\n\n\n  componentDidMount() {\n    fetch(\"api/latest\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            data: result,\n            isLoaded: true,\n          });\n          console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  render() {\n    const { data,isLoaded } = this.state;\n    if (!isLoaded) {\n        return <div>Loading...</div>;\n      }\n     else \n     { \n    return (\n      <div>\n\n<Breadcrumb>\n        <BreadcrumbItem><a href=\"/\">Home</a></BreadcrumbItem>\n        <BreadcrumbItem active>Top Stocks</BreadcrumbItem>\n      </Breadcrumb>\n    \n   <br/> \n\n\n\n        <ReactTable\n          data={data}\n          columns={[\n            {\n              Header: \"Symbol\",\n              accessor: 'symbol'\n            },\n            {\n              Header: \"Open\",\n              accessor: 'open'\n            },\n            {\n              Header: 'Close',\n              accessor: 'close'\n            },\n            {\n                Header: 'Low',\n                accessor: 'low'\n            },\n            {\n                Header: 'High',\n                accessor: 'high'\n            },\n            {\n                Header: 'Volume',\n                accessor: 'volume'\n            }\n          ]}\n          defaultPageSize={10}\n          defaultSorted={[\n            {\n              id: \"close\",\n              desc: true\n            },\n            {\n              id: \"volume\",\n              desc:true\n            }\n          ]}\n          className=\"-striped -highlight\"\n        />\n\n\n        <br />\n      </div>\n    );\n        }\n  }\n}\n\nexport default TopStockComponent;\n\n\n\n\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport ChartComponent from './Charts'\nimport StockComponent from './Stocks'\nimport StockHistoryComponent from './StockHistory'\nimport TopStockComponent from './TopStocks'\n\nconst Router = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={TopStockComponent}/>\n      <Route path='/chart' component={ChartComponent}/>\n      <Route path='/stock' component={StockComponent}/>\n      <Route path='/stock-history' component={StockHistoryComponent}/>\n      <Route path='/top' component={TopStockComponent}/>\n\n\n    </Switch>\n  </main>\n)\n\nexport default Router","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink } from 'reactstrap';\n\nexport default class NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Stock Market</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/stock-history/\">Company-Stock History</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/stock\">Stock on a Date</NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink href=\"/chart\">Analytics</NavLink>\n              </NavItem>\n              \n                \n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport Router from './Router'\nimport NavigationBar from './NavigationBar';\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    document.title = \"Stock Market\"\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <NavigationBar/>\n\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(    <BrowserRouter>\n     <App />\n     </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}